{"version":3,"sources":["ChartComponent.tsx","index.tsx"],"names":["MyD3Component","props","d3Container","useRef","useEffect","data","current","root","d3","sum","d","value","sort","a","b","eachAfter","index","parent","margin","top","right","bottom","left","color","colour","width","height","max","each","children","Math","length","stagger","i","t","concat","x","stack","bar","svg","down","selector","g","insert","attr","barStep","style","selectAll","join","on","event","append","text","name","node","select","datum","transition1","transition","duration","transition2","exit","p","remove","enter","domain","call","xAxis","range","_buildScales","ticks","selection","buildScales","_buildScales2","_slicedToArray","yAxis","empty","this","up","React","createElement","ref","className","ChartComponent","_StreamlitComponentBa","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","args","Array","_key","apply","render","_createClass","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b17d747.chunk.js","sourcesContent":["import {\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\";\r\nimport React, { useRef, useEffect, ReactNode } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\ninterface IProps {\r\n  data?: any;\r\n  width: number;\r\n  colour: string;\r\n}\r\n\r\nconst buildScales = (width: number, height: number, x: any) => {\r\n  const margin = { top: 30, right: 30, bottom: 0, left: 100 };\r\n  const xAxis = (g: any) =>\r\n    g\r\n      .attr(\"transform\", `translate(0,${margin.top})`)\r\n      .call(d3.axisTop(x).ticks(width / 80, \"s\"))\r\n      .call((g: any) =>\r\n        (g.selection ? g.selection() : g).select(\".domain\").remove()\r\n      );\r\n\r\n  const yAxis = (g: any) =>\r\n    g.attr(\"transform\", `translate(${margin.left + 0.5}, 0)`).call((g: any) =>\r\n      g\r\n        .append(\"line\")\r\n        .attr(\"stroke\", \"currentColor\")\r\n        .attr(\"y1\", margin.top)\r\n        .attr(\"y2\", height - margin.bottom)\r\n    );\r\n  return [xAxis, yAxis];\r\n};\r\n\r\nexport const MyD3Component = (props: IProps) => {\r\n  const d3Container = useRef(null);\r\n  useEffect(() => {\r\n    if (props.data && d3Container.current) {\r\n      const root = d3\r\n        .hierarchy(props.data)\r\n        .sum((d) => d.value)\r\n        .sort((a, b) => (b as any).value - (a as any).value)\r\n        .eachAfter(\r\n          (d) =>\r\n            ((d as any).index = d.parent\r\n              ? ((d.parent as any).index = (d.parent as any).index + 1 || 0)\r\n              : 0)\r\n        );\r\n\r\n      const margin = { top: 30, right: 30, bottom: 0, left: 100 };\r\n      const barStep = 27;\r\n      const barPadding = 3 / barStep;\r\n      const duration = 750;\r\n      const color = d3.scaleOrdinal([true, false], [props.colour, \"#aaa\"]);\r\n      const width = props.width;\r\n      const height = (function () {\r\n        let max = 1;\r\n        root.each(\r\n          (d) => d.children && (max = Math.max(max, d.children.length))\r\n        );\r\n        return max * barStep + margin.top + margin.bottom;\r\n      })();\r\n\r\n      const stagger = function () {\r\n        let value = 0;\r\n        return (d: any, i: any) => {\r\n          const t = `translate(${x(value) - x(0)},${barStep * i})`;\r\n          value += d.value;\r\n          return t;\r\n        };\r\n      };\r\n\r\n      const stack = function (i: any) {\r\n        let value = 0;\r\n        return (d: any) => {\r\n          const t = `translate(${x(value) - x(0)},${barStep * i})`;\r\n          value += d.value;\r\n          return t;\r\n        };\r\n      };\r\n\r\n      const bar = function (svg: any, down: any, d: any, selector: any) {\r\n        const g = svg\r\n          .insert(\"g\", selector)\r\n          .attr(\"class\", \"enter\")\r\n          .attr(\r\n            \"transform\",\r\n            `translate(0,${margin.top + barStep * barPadding})`\r\n          )\r\n          .attr(\"text-anchor\", \"end\")\r\n          .style(\"font\", \"10px sans-serif\")\r\n          .style(\"fill\", \"white\");\r\n\r\n        const bar = g\r\n          .selectAll(\"g\")\r\n          .data(d.children)\r\n          .join(\"g\")\r\n          .attr(\"cursor\", (d: any) => (!d.children ? null : \"pointer\"))\r\n          .on(\"click\", (event: any, d: any) => down(svg, d));\r\n\r\n        bar\r\n          .append(\"text\")\r\n          .attr(\"x\", margin.left - 6)\r\n          .attr(\"y\", (barStep * (1 - barPadding)) / 2)\r\n          .attr(\"dy\", \".35em\")\r\n          .text((d: any) => d.data.name);\r\n\r\n        bar\r\n          .append(\"rect\")\r\n          .attr(\"x\", x(0))\r\n          .attr(\"width\", (d: any) => x(d.value) - x(0))\r\n          .attr(\"height\", barStep * (1 - barPadding));\r\n\r\n        return g;\r\n      };\r\n\r\n      const down = function (svg: any, d: any) {\r\n        if (!d.children || d3.active(svg.node())) return;\r\n\r\n        // Rebind the current node to the background.\r\n        svg.select(\".background\").datum(d);\r\n\r\n        // Define two sequenced transitions.\r\n        const transition1 = svg.transition().duration(duration);\r\n        const transition2 = transition1.transition();\r\n\r\n        // Mark any currently-displayed bars as exiting.\r\n        const exit = svg.selectAll(\".enter\").attr(\"class\", \"exit\");\r\n\r\n        // Entering nodes immediately obscure the clicked-on bar, so hide it.\r\n        exit\r\n          .selectAll(\"rect\")\r\n          .attr(\"fill-opacity\", (p: any) => (p === d ? 0 : null));\r\n\r\n        // Transition exiting bars to fade out.\r\n        exit.transition(transition1).attr(\"fill-opacity\", 0).remove();\r\n\r\n        // Enter the new bars for the clicked-on data.\r\n        // Per above, entering bars are immediately visible.\r\n        const enter = bar(svg, down, d, \".y-axis\").attr(\"fill-opacity\", 0);\r\n\r\n        // Have the text fade-in, even though the bars are visible.\r\n        enter.transition(transition1).attr(\"fill-opacity\", 1);\r\n\r\n        // Transition entering bars to their new y-position.\r\n        enter\r\n          .selectAll(\"g\")\r\n          .attr(\"transform\", stack(d.index))\r\n          .transition(transition1)\r\n          .attr(\"transform\", stagger());\r\n\r\n        // Update the x-scale domain.\r\n        x.domain([0, d3.max(d.children, (d: any) => d.value)] as any);\r\n\r\n        // Update the x-axis.\r\n        svg.selectAll(\".x-axis\").transition(transition2).call(xAxis);\r\n\r\n        // Transition entering bars to the new x-scale.\r\n        enter\r\n          .selectAll(\"g\")\r\n          .transition(transition2)\r\n          .attr(\"transform\", (d: any, i: any) => `translate(0,${barStep * i})`);\r\n\r\n        // Color the bars as parents; they will fade to children if appropriate.\r\n        enter\r\n          .selectAll(\"rect\")\r\n          .attr(\"fill\", color(true))\r\n          .attr(\"fill-opacity\", 1)\r\n          .transition(transition2)\r\n          .attr(\"fill\", (d: any) => color(!!d.children))\r\n          .attr(\"width\", (d: any) => x(d.value) - x(0));\r\n      };\r\n\r\n      const up = function (svg: any, d: any) {\r\n        if (!d.parent || !svg.selectAll(\".exit\").empty()) return;\r\n\r\n        // Rebind the current node to the background.\r\n        svg.select(\".background\").datum(d.parent);\r\n\r\n        // Define two sequenced transitions.\r\n        const transition1 = svg.transition().duration(duration);\r\n        const transition2 = transition1.transition();\r\n\r\n        // Mark any currently-displayed bars as exiting.\r\n        const exit = svg.selectAll(\".enter\").attr(\"class\", \"exit\");\r\n\r\n        // Update the x-scale domain.\r\n        x.domain([0, d3.max(d.parent.children, (d: any) => d.value)] as any);\r\n\r\n        // Update the x-axis.\r\n        svg.selectAll(\".x-axis\").transition(transition1).call(xAxis);\r\n\r\n        // Transition exiting bars to the new x-scale.\r\n        exit\r\n          .selectAll(\"g\")\r\n          .transition(transition1)\r\n          .attr(\"transform\", stagger());\r\n\r\n        // Transition exiting bars to the parent’s position.\r\n        exit\r\n          .selectAll(\"g\")\r\n          .transition(transition2)\r\n          .attr(\"transform\", stack(d.index));\r\n\r\n        // Transition exiting rects to the new scale and fade to parent color.\r\n        exit\r\n          .selectAll(\"rect\")\r\n          .transition(transition1)\r\n          .attr(\"width\", (d: any) => x(d.value) - x(0))\r\n          .attr(\"fill\", color(true));\r\n\r\n        // Transition exiting text to fade out.\r\n        // Remove exiting nodes.\r\n        exit.transition(transition2).attr(\"fill-opacity\", 0).remove();\r\n\r\n        // Enter the new bars for the clicked-on data's parent.\r\n        const enter = bar(svg, down, d.parent, \".exit\").attr(\"fill-opacity\", 0);\r\n\r\n        enter\r\n          .selectAll(\"g\")\r\n          .attr(\"transform\", (d: any, i: any) => `translate(0,${barStep * i})`);\r\n\r\n        // Transition entering bars to fade in over the full duration.\r\n        enter.transition(transition2).attr(\"fill-opacity\", 1);\r\n\r\n        // Color the bars as appropriate.\r\n        // Exiting nodes will obscure the parent bar, so hide it.\r\n        // Transition entering rects to the new x-scale.\r\n        // When the entering parent rect is done, make it visible!\r\n        enter\r\n          .selectAll(\"rect\")\r\n          .attr(\"fill\", (d: any) => color(!!d.children))\r\n          .attr(\"fill-opacity\", (p: any) => (p === d ? 0 : null))\r\n          .transition(transition2)\r\n          .attr(\"width\", (d: any) => x(d.value) - x(0))\r\n          .on(\"end\", function (this: any, p: any) {\r\n            d3.select(this).attr(\"fill-opacity\", 1);\r\n          });\r\n      };\r\n\r\n      const x = d3.scaleLinear().range([margin.left, width - margin.right]);\r\n      x.domain([0, root.value] as any);\r\n\r\n      const svg = d3\r\n        .select(d3Container.current)\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height);\r\n      const [xAxis, yAxis] = buildScales(width, height, x);\r\n\r\n      svg\r\n        .select(\".background\")\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"pointer-events\", \"all\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .attr(\"cursor\", \"pointer\")\r\n        .on(\"click\", (event, d) => up(svg, d));\r\n\r\n      svg.select(\".x-axis\").call(xAxis);\r\n      svg.select(\".y-axis\").call(yAxis);\r\n      down(svg, root);\r\n    }\r\n  }, [props.data, props.width, props.colour]);\r\n\r\n  return (\r\n    <svg ref={d3Container} style={{ height: 350 + \"px\" }}>\r\n      <rect className=\"background\" />\r\n      <g className=\"x-axis\" />\r\n      <g className=\"y-axis\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nclass ChartComponent extends StreamlitComponentBase {\r\n  public render = (): ReactNode => {\r\n    return <MyD3Component data={this.props.args[\"jsonData\"]} width = {900} colour={this.props.args[\"chartColour\"]}/>;\r\n  };\r\n}\r\n\r\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\r\n// connection between your component and the Streamlit app, and handles\r\n// passing arguments from Python -> Component.\r\n\r\nexport default withStreamlitConnection(ChartComponent);\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport ChartComponent from \"./ChartComponent\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ChartComponent />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}